// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PowerTeam.DAL;
using PowerTeam.Model;
using System;

namespace PowerTeam.DAL.Migrations
{
    [DbContext(typeof(PTDBContext))]
    [Migration("20180615023541_ChangeDatabase")]
    partial class ChangeDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PowerTeam.Model.Delivery", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CloseDate");

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DeliveryType");

                    b.Property<Guid?>("ParentDeliveryGuid");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Title");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Guid");

                    b.HasIndex("ParentDeliveryGuid");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("PowerTeam.Model.DeliveryShareditem", b =>
                {
                    b.Property<Guid>("DeliveryId");

                    b.Property<Guid>("SharedItemId");

                    b.HasKey("DeliveryId", "SharedItemId");

                    b.HasIndex("SharedItemId");

                    b.ToTable("DeliveryShareditems");
                });

            modelBuilder.Entity("PowerTeam.Model.DeliveryTag", b =>
                {
                    b.Property<Guid>("DeliveryId");

                    b.Property<Guid>("TagId");

                    b.HasKey("DeliveryId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("DeliveryTags");
                });

            modelBuilder.Entity("PowerTeam.Model.Item", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid?>("DeliveryGuid");

                    b.Property<int>("ItemType");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<Guid?>("User");

                    b.Property<Guid>("UserGuid");

                    b.HasKey("Guid");

                    b.HasIndex("DeliveryGuid");

                    b.HasIndex("User");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("PowerTeam.Model.Role", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("RoleType");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Guid");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PowerTeam.Model.SharedItem", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("ItemType");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<Guid>("User");

                    b.Property<Guid>("UserGuid");

                    b.HasKey("Guid");

                    b.HasIndex("User");

                    b.ToTable("SharedItems");
                });

            modelBuilder.Entity("PowerTeam.Model.Tag", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid?>("ItemGuid");

                    b.Property<string>("Name");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Guid");

                    b.HasIndex("ItemGuid");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("PowerTeam.Model.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alias");

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PowerTeam.Model.UserRole", b =>
                {
                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("PowerTeam.Model.WorkHour", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateBy");

                    b.Property<DateTime>("CreateTime");

                    b.Property<Guid>("DeliveryId");

                    b.Property<DateTime>("LogDate");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<Guid>("UserId");

                    b.HasKey("Guid");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkHours");
                });

            modelBuilder.Entity("PowerTeam.Model.Delivery", b =>
                {
                    b.HasOne("PowerTeam.Model.Delivery", "ParentDelivery")
                        .WithMany("SubDeliveries")
                        .HasForeignKey("ParentDeliveryGuid");
                });

            modelBuilder.Entity("PowerTeam.Model.DeliveryShareditem", b =>
                {
                    b.HasOne("PowerTeam.Model.Delivery", "Delivery")
                        .WithMany("DeliveryShareditems")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PowerTeam.Model.SharedItem", "SharedItem")
                        .WithMany("DeliverySharedItems")
                        .HasForeignKey("SharedItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PowerTeam.Model.DeliveryTag", b =>
                {
                    b.HasOne("PowerTeam.Model.Delivery", "Delivery")
                        .WithMany("DeliveryTags")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PowerTeam.Model.Tag", "Tag")
                        .WithMany("DeliveryTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PowerTeam.Model.Item", b =>
                {
                    b.HasOne("PowerTeam.Model.Delivery", "Delivery")
                        .WithMany("Items")
                        .HasForeignKey("DeliveryGuid");

                    b.HasOne("PowerTeam.Model.User", "Owner")
                        .WithMany()
                        .HasForeignKey("User");
                });

            modelBuilder.Entity("PowerTeam.Model.SharedItem", b =>
                {
                    b.HasOne("PowerTeam.Model.User", "Owner")
                        .WithMany()
                        .HasForeignKey("User")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PowerTeam.Model.Tag", b =>
                {
                    b.HasOne("PowerTeam.Model.Item")
                        .WithMany("Tags")
                        .HasForeignKey("ItemGuid");
                });

            modelBuilder.Entity("PowerTeam.Model.UserRole", b =>
                {
                    b.HasOne("PowerTeam.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PowerTeam.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PowerTeam.Model.WorkHour", b =>
                {
                    b.HasOne("PowerTeam.Model.Delivery", "Delivery")
                        .WithMany()
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PowerTeam.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
